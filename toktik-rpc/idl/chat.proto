syntax = "proto3";
package chat;

option go_package = "chat";

message MessageListRequest {
   int64 user_id = 1;
   int64 to_user_id = 2; // 对方用户id
   int64 pre_msg_time=3;//上次最新消息的时间（新增字段-apk更新中）
}

message MessageListResponse {
   int64 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
  repeated Message message_list = 3; // 消息列表
}

message Message {
   int64 id = 1; // 消息id
   int64 to_user_id = 2; // 该消息接收者的id
   int64 from_user_id =3; // 该消息发送者的id
   string content = 4; // 消息内容
   int64 create_time = 5; // 消息创建时间
}

message ChatActionRequest {
  int64 user_id = 1;
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message ChatActionResponse {
   int64 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
}

message GetFriendLatestMessageRequest{
  int64 user_id = 1;
  repeated int64 friend_ids = 2;
}

message GetFriendLatestMessageResponse{
  int64 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated string message_list = 3;
  repeated int32 msg_type_list = 4;
}

service ChatService{
  rpc MessageList(MessageListRequest)returns(MessageListResponse);
  rpc ChatAction(ChatActionRequest)returns(ChatActionResponse);
  rpc GetFriendLatestMessage(GetFriendLatestMessageRequest)returns(GetFriendLatestMessageResponse);
}